// <auto-generated />
using System;
using Kursovik.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kursovik.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240506165709_InitMigration_V1.0")]
    partial class InitMigration_V10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("Kursovik.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("EndDate");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Room")
                        .HasColumnType("TEXT")
                        .HasColumnName("Room");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartDate");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Hours");

                    b.HasKey("Id");

                    b.ToTable("Disciplines");
                });

            modelBuilder.Entity("Kursovik.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Kursovik.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT")
                        .HasColumnName("FullName");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT")
                        .HasColumnName("Login");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT")
                        .HasColumnName("Password");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT")
                        .HasColumnName("Phone");

                    b.Property<string>("Photo_path")
                        .HasColumnType("TEXT")
                        .HasColumnName("Photo_Path");

                    b.Property<int>("PositionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Position_id");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Type_id");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("Kursovik.Models.TeacherDiscipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Discipline_id");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Teacher_id");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Teacher_Discipline", (string)null);
                });

            modelBuilder.Entity("Kursovik.Models.TeacherType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("TypeName")
                        .HasColumnType("TEXT")
                        .HasColumnName("Type_Name");

                    b.HasKey("Id");

                    b.ToTable("Teacher_Type", (string)null);
                });

            modelBuilder.Entity("Kursovik.Models.Teacher", b =>
                {
                    b.HasOne("Kursovik.Models.Position", "Position")
                        .WithMany("Teachers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kursovik.Models.TeacherType", "TeacherType")
                        .WithMany("Teachers")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("TeacherType");
                });

            modelBuilder.Entity("Kursovik.Models.TeacherDiscipline", b =>
                {
                    b.HasOne("Kursovik.Models.Discipline", "Discipline")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kursovik.Models.Teacher", "Teachers")
                        .WithMany("TeacherDisciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Kursovik.Models.Discipline", b =>
                {
                    b.Navigation("TeacherDisciplines");
                });

            modelBuilder.Entity("Kursovik.Models.Position", b =>
                {
                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("Kursovik.Models.Teacher", b =>
                {
                    b.Navigation("TeacherDisciplines");
                });

            modelBuilder.Entity("Kursovik.Models.TeacherType", b =>
                {
                    b.Navigation("Teachers");
                });
#pragma warning restore 612, 618
        }
    }
}
